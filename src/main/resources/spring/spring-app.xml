<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	<context:component-scan base-package="cn.nullah.newborn.service">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- <value>file:/opt/demo/config/demo-mq.properties</value> -->
				<!-- <value>classpath*:/*.properties</value> -->
				<value>classpath*:/mysql.jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- <import resource="classpath:/spring/dao-mybatis.xml" /> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation" value="classpath:mybatis-config.xml" 
			/> -->
		<property name="typeAliasesPackage" value="cn.nullah.newborn.model" />
		<property name="mapperLocations" value="classpath*:cn/nullah/newborn/mapper/**/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.nullah.newborn.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 对dataSource 数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="globalRollbackOnParticipationFailure" value="false" 
			/> -->
	</bean>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" 
		/> -->
	<!-- 事务管理 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="exec*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="gen*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="upt*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="sel*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="ruleManagerMethod"
			expression="execution(public * cn.nullah.newborn.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ruleManagerMethod" />
	</aop:config>
</beans>
